local TweenService = game:GetService("TweenService")

for _,v in pairs (workspace.Doors:GetChildren()) do
	local OpenValue = v:WaitForChild("Open")
	v.Parent = workspace.CurrentCamera
	OpenValue.Changed:Connect(function()
		if v.Name == "KeycardDoor" and OpenValue.Value == true then
			v.KeycardDoor.ScriptedComponents.Light.BrickColor = BrickColor.new("Artichoke")
			TweenService:Create(v.KeycardDoor.ScriptedComponents.Door, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.KeycardDoor.ScriptedComponents.Door.CFrame * CFrame.new(0, 0, 5)
			}):Play()
			v.KeycardDoor.ScriptedComponents.Door.DoorOpen:Play()
			wait(workspace.GameSettings.KeycardDoor.Value - 1)
			TweenService:Create(v.KeycardDoor.ScriptedComponents.Door, TweenInfo.new(.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.KeycardDoor.ScriptedComponents.Door.CFrame * CFrame.new(0, 0, -5)
			}):Play()
			v.KeycardDoor.ScriptedComponents.Door.DoorClose:Play()
			v.KeycardDoor.ScriptedComponents.Light.BrickColor = BrickColor.new("Lily white")
		elseif v.Name == "ButtonDoor" and OpenValue.Value == true then
			v.Button.RedButton.BrickColor = BrickColor.new("Artichoke")
			TweenService:Create(v.Door, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door.CFrame * CFrame.new(0, 0, 5)
			}):Play()
			v.Door.DoorOpen:Play()
			wait(workspace.GameSettings.ButtonDoor.Value - 1)
			TweenService:Create(v.Door, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door.CFrame * CFrame.new(0, 0, -5)
			}):Play()
			v.Door.DoorClose:Play()
			v.Button.RedButton.BrickColor = BrickColor.new("Persimmon")
		elseif v.Name == "DoubleDoor" and OpenValue.Value == true then
			v.ScriptedComponents.Light.BrickColor = BrickColor.new("Artichoke")
			TweenService:Create(v.ScriptedComponents.RightDoor, TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.ScriptedComponents.RightDoor.CFrame * CFrame.new(0, 0, 5.9)
			}):Play()
			TweenService:Create(v.ScriptedComponents.LeftDoor, TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.ScriptedComponents.LeftDoor.CFrame * CFrame.new(0, 0, 5.9)
			}):Play()
			v.ScriptedComponents.RightDoor.DoorOpen:Play()
			wait(workspace.GameSettings.DoubleDoor.Value - 3)
			TweenService:Create(v.ScriptedComponents.RightDoor, TweenInfo.new(2.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.ScriptedComponents.RightDoor.CFrame * CFrame.new(0, 0, -5.9)
			}):Play()
			TweenService:Create(v.ScriptedComponents.LeftDoor, TweenInfo.new(2.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.ScriptedComponents.LeftDoor.CFrame * CFrame.new(0, 0, -5.9)
			}):Play()
			v.ScriptedComponents.Light.BrickColor = BrickColor.new("Lily white")
			v.ScriptedComponents.RightDoor.DoorClose:Play()
		elseif v.Name == "LargeVentKeycardDoor" and OpenValue.Value == true then
			v.KeycardDoor.ScriptedComponents.Light.BrickColor = BrickColor.new("Artichoke")
			TweenService:Create(v.KeycardDoor.ScriptedComponents.Door, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.KeycardDoor.ScriptedComponents.Door.CFrame * CFrame.new(0, 0, 8.5)
			}):Play()
			v.KeycardDoor.ScriptedComponents.Door.DoorOpen:Play()
			wait(workspace.GameSettings.LargeVentKeycardDoor.Value - 1)
			TweenService:Create(v.KeycardDoor.ScriptedComponents.Door, TweenInfo.new(.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.KeycardDoor.ScriptedComponents.Door.CFrame * CFrame.new(0, 0, -8.5)
			}):Play()
			v.KeycardDoor.ScriptedComponents.Door.DoorClose:Play()
			v.KeycardDoor.ScriptedComponents.Light.BrickColor = BrickColor.new("Lily white")
		elseif v.Name == "ArmoredDoor" and OpenValue.Value == true then
			v.CardReader1.Light.BrickColor = BrickColor.new("Lime green")
			v.CardReader2.Light.BrickColor = BrickColor.new("Lime green")
			TweenService:Create(v.Door1.Primary, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.Primary.CFrame * CFrame.new(-2, 0, 0)
			}):Play()
			TweenService:Create(v.Door2.Primary, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door2.Primary.CFrame * CFrame.new(2, 0, 0)
			}):Play()
			v.Sounds.DoorOpen:Play()
			wait(workspace.GameSettings.ArmoredDoor.Value - 1)
			TweenService:Create(v.Door1.Primary, TweenInfo.new(1.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.Primary.CFrame * CFrame.new(2, 0, 0)
			}):Play()
			TweenService:Create(v.Door2.Primary, TweenInfo.new(1.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door2.Primary.CFrame * CFrame.new(-2, 0, 0)
			}):Play()
			v.Sounds.DoorClose:Play()
			v.CardReader1.Light.BrickColor = BrickColor.new("Dusty Rose")
			v.CardReader2.Light.BrickColor = BrickColor.new("Dusty Rose")
		elseif v.Name == "OutwardDoubleDoor" and OpenValue.Value == true then
			v.CardReader1.Light.BrickColor = BrickColor.new("Lime green")
			v.CardReader2.Light.BrickColor = BrickColor.new("Lime green")
			TweenService:Create(v.Door1.RootPart, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.RootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)
			}):Play()
			TweenService:Create(v.Door2.RootPart, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door2.RootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
			}):Play()
			v.Scripting.Sounds.DoorOpen:Play()
			wait(workspace.GameSettings.OutwardDoubleDoor.Value - 1)
			TweenService:Create(v.Door1.RootPart, TweenInfo.new(1.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.RootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
			}):Play()
			TweenService:Create(v.Door2.RootPart, TweenInfo.new(1.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door2.RootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)
			}):Play()
			v.Scripting.Sounds.DoorClose:Play()
			v.CardReader1.Light.BrickColor = BrickColor.new("Dusty Rose")
			v.CardReader2.Light.BrickColor = BrickColor.new("Dusty Rose")
		elseif v.Name == "FD2" and OpenValue.Value == true then
			v.CardReader1.Light.BrickColor = BrickColor.new("Lime green")
			v.CardReader2.Light.BrickColor = BrickColor.new("Lime green")
			TweenService:Create(v.Door1.RootPart, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.RootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)
			}):Play()
			v.Sounds.DoorOpen:Play()
			wait(workspace.GameSettings.OutwardDoubleDoor.Value - 1)
			TweenService:Create(v.Door1.RootPart, TweenInfo.new(1.9, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
				CFrame = v.Door1.RootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)
			}):Play()
			v.Sounds.DoorClose:Play()
			v.CardReader1.Light.BrickColor = BrickColor.new("Dusty Rose")
			v.CardReader2.Light.BrickColor = BrickColor.new("Dusty Rose")
		end
	end)
end
